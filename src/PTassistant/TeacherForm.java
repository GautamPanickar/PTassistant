/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package PTassistant;

import Database.DatabaseManager;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Panickar
 */
public class TeacherForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    
    private int teacherId = 0;
    private int deptId = 0;
    public TeacherForm(){
        
        initComponents();
        setLocationRelativeTo(null);        
        
    }
    
    public TeacherForm(int teacherId){
        
        initComponents();
        setLocationRelativeTo(null);
        this.teacherId = teacherId;
        this.SetTeacherDepartmentID();
        setShowSubjectAllocation();
        setPanelVisibility(ShowAllocationPanle);
        
    }
    
     private ResultSet           rs=null;
    
    // Set the visibility of the panel in the card layout.
    // Logic:
    //   fist set visibility of all panel to false
    //   Then make the visibility of selected panel to true
    private void setPanelVisibility( JPanel panel ){
        
        MiddllePanel.removeAll();
        MiddllePanel.repaint();
        MiddllePanel.revalidate();
        
        MiddllePanel.add(panel);
        MiddllePanel.repaint();
        MiddllePanel.revalidate();
    }
    
    private void SetTeacherDepartmentID()
    {
        try
        {
            this.deptId = new DatabaseManager().getTeacherDepartmentIdFromTeacherId(teacherId);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage());
        }
    }
    
    private void setShowSubjectAllocation(){
        
        DatabaseManager dbManager;
        DefaultTableModel dm = (DefaultTableModel)AllocationDetailsTable.getModel();
        
        try {
            dm.setRowCount(0);
            dbManager     = new DatabaseManager();
            ResultSet rs  = dbManager.getAllocationDetailsOfTeacherWithId(teacherId);
            if(rs.isBeforeFirst()){
               while(rs.next()){ 
                    dm.addRow(new Object[]{
                    rs.getString("Assign_ID"),
                    rs.getString("Subject_ID"),
                    rs.getString("Subject_Name"),
                    rs.getString("Department_Name"),                   
                    rs.getString("Subject_Semester"),
                   
                    
                    });
               }
               
               
               
            }   
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        HeaderPanel = new javax.swing.JPanel();
        HeaderLogoLabel = new javax.swing.JLabel();
        InfoLabelHeader2 = new javax.swing.JLabel();
        MiddllePanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ShowAllocationPanle = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        AllocationDetailsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Attendance = new javax.swing.JButton();
        AddAssignmentButton = new javax.swing.JButton();
        Option3OptionButton = new javax.swing.JButton();
        Option4OptionButton = new javax.swing.JButton();
        Option5OptionButton = new javax.swing.JButton();
        ShowTestButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        TeacherChangePasswordButton = new javax.swing.JButton();
        TeacherChangePasswordButton1 = new javax.swing.JButton();
        ShowAttendence = new javax.swing.JPanel();
        topPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        AttendenceDateCombo = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        semesterTF2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        deptTF2 = new javax.swing.JTextField();
        subjectNameTF2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        subjectTF2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowAttendenceTable = new javax.swing.JTable();
        reSaveAttendenceButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        AddAttendencePanel = new javax.swing.JPanel();
        jXDatePickeAttendence = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        AllendenceStudentTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        semesterTF = new javax.swing.JTextField();
        subjectTF = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        subjectNameTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        deptTF = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        AddAssignmentPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        semesterTF1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        deptTF1 = new javax.swing.JTextField();
        subjectNameTF1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        subjectTF1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jXDatePickeAssignment = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane6 = new javax.swing.JScrollPane();
        AssignmentStudentTable = new javax.swing.JTable();
        SaveAssignmentButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        AssignmentNameTF = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        ShowAssignmentPanel1 = new javax.swing.JPanel();
        topPanel3 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        AssignmentDateCombo = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        semesterTF3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        deptTF3 = new javax.swing.JTextField();
        subjectNameTF3 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        subjectTF3 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        assignmentNameTF = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        ShowAssignmentTable = new javax.swing.JTable();
        reSaveAttendenceButton2 = new javax.swing.JButton();
        reSaveAttendenceButton3 = new javax.swing.JButton();
        AddTestMarkPanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        semesterTF4 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        subjectTF4 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        deptTF4 = new javax.swing.JTextField();
        subjectNameTF4 = new javax.swing.JTextField();
        jXDatePickeTest = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane8 = new javax.swing.JScrollPane();
        testAddTable = new javax.swing.JTable();
        SaveAssignmentButton1 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        SaveAssignmentButton2 = new javax.swing.JButton();
        ShowTestPanel = new javax.swing.JPanel();
        ShowAttendence1 = new javax.swing.JPanel();
        topPanel1 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        TestDateCombo = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        semesterTF5 = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        deptTF5 = new javax.swing.JTextField();
        subjectNameTF5 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        subjectTF5 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ShowTestTable = new javax.swing.JTable();
        reSaveAttendenceButton1 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        AddStudent = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        studentRegIdTF = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        studentNameTF = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        studentInfoTA = new javax.swing.JTextArea();
        jLabel35 = new javax.swing.JLabel();
        studentDeptCombo = new javax.swing.JComboBox();
        addStudentButton = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        studentBatchCombo = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        HeaderPanel.setBackground(new java.awt.Color(22, 37, 47));
        HeaderPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        HeaderLogoLabel.setFont(new java.awt.Font("Tekton Pro", 1, 36)); // NOI18N
        HeaderLogoLabel.setForeground(new java.awt.Color(255, 255, 255));
        HeaderLogoLabel.setText("PTassistant");

        InfoLabelHeader2.setFont(new java.awt.Font("Miriam Fixed", 0, 10)); // NOI18N
        InfoLabelHeader2.setForeground(new java.awt.Color(204, 219, 222));
        InfoLabelHeader2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        InfoLabelHeader2.setText("Poly-Technic Attendance Management");

        javax.swing.GroupLayout HeaderPanelLayout = new javax.swing.GroupLayout(HeaderPanel);
        HeaderPanel.setLayout(HeaderPanelLayout);
        HeaderPanelLayout.setHorizontalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HeaderPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(InfoLabelHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(HeaderLogoLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HeaderPanelLayout.setVerticalGroup(
            HeaderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HeaderLogoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InfoLabelHeader2)
                .addGap(43, 43, 43))
        );

        MiddllePanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 489, Short.MAX_VALUE)
        );

        MiddllePanel.add(jPanel2, "card8");

        ShowAllocationPanle.setBackground(new java.awt.Color(255, 255, 255));
        ShowAllocationPanle.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Allocated subjects", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        AllocationDetailsTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AllocationDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Allocation id", "Subject code", "Subject name", "Department name", "semester"
            }
        ));
        AllocationDetailsTable.setRowHeight(30);
        jScrollPane4.setViewportView(AllocationDetailsTable);

        jLabel1.setText("Select a subject and click corresponding buttons ");

        Attendance.setBackground(new java.awt.Color(204, 255, 204));
        Attendance.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Attendance.setForeground(new java.awt.Color(0, 53, 91));
        Attendance.setText("Add Attendance");
        Attendance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Attendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AttendanceMouseClicked(evt);
            }
        });
        Attendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttendanceActionPerformed(evt);
            }
        });

        AddAssignmentButton.setBackground(new java.awt.Color(204, 255, 204));
        AddAssignmentButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        AddAssignmentButton.setForeground(new java.awt.Color(0, 53, 91));
        AddAssignmentButton.setText("Add Assignment");
        AddAssignmentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AddAssignmentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddAssignmentButtonMouseClicked(evt);
            }
        });
        AddAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAssignmentButtonActionPerformed(evt);
            }
        });

        Option3OptionButton.setBackground(new java.awt.Color(204, 255, 204));
        Option3OptionButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Option3OptionButton.setForeground(new java.awt.Color(0, 53, 91));
        Option3OptionButton.setText("Add Test Mark");
        Option3OptionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Option3OptionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option3OptionButtonMouseClicked(evt);
            }
        });
        Option3OptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Option3OptionButtonActionPerformed(evt);
            }
        });

        Option4OptionButton.setBackground(new java.awt.Color(204, 204, 255));
        Option4OptionButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Option4OptionButton.setForeground(new java.awt.Color(0, 53, 91));
        Option4OptionButton.setText("Edit attendence");
        Option4OptionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Option4OptionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option4OptionButtonMouseClicked(evt);
            }
        });
        Option4OptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Option4OptionButtonActionPerformed(evt);
            }
        });

        Option5OptionButton.setBackground(new java.awt.Color(204, 204, 255));
        Option5OptionButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        Option5OptionButton.setForeground(new java.awt.Color(0, 53, 91));
        Option5OptionButton.setText("Edit assignment");
        Option5OptionButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Option5OptionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option5OptionButtonMouseClicked(evt);
            }
        });
        Option5OptionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Option5OptionButtonActionPerformed(evt);
            }
        });

        ShowTestButton.setBackground(new java.awt.Color(204, 204, 255));
        ShowTestButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        ShowTestButton.setForeground(new java.awt.Color(0, 53, 91));
        ShowTestButton.setText("Edit test");
        ShowTestButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        ShowTestButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShowTestButtonMouseClicked(evt);
            }
        });
        ShowTestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTestButtonActionPerformed(evt);
            }
        });

        LogoutButton.setBackground(new java.awt.Color(255, 255, 255));
        LogoutButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        LogoutButton.setForeground(new java.awt.Color(0, 53, 91));
        LogoutButton.setText("Logout");
        LogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseClicked(evt);
            }
        });
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        TeacherChangePasswordButton.setBackground(new java.awt.Color(255, 255, 255));
        TeacherChangePasswordButton.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        TeacherChangePasswordButton.setForeground(new java.awt.Color(0, 53, 91));
        TeacherChangePasswordButton.setText("Change password");
        TeacherChangePasswordButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TeacherChangePasswordButtonMouseClicked(evt);
            }
        });
        TeacherChangePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeacherChangePasswordButtonActionPerformed(evt);
            }
        });

        TeacherChangePasswordButton1.setBackground(new java.awt.Color(255, 255, 255));
        TeacherChangePasswordButton1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        TeacherChangePasswordButton1.setForeground(new java.awt.Color(0, 53, 91));
        TeacherChangePasswordButton1.setText("Add student");
        TeacherChangePasswordButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TeacherChangePasswordButton1MouseClicked(evt);
            }
        });
        TeacherChangePasswordButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TeacherChangePasswordButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllocationPanleLayout = new javax.swing.GroupLayout(ShowAllocationPanle);
        ShowAllocationPanle.setLayout(ShowAllocationPanleLayout);
        ShowAllocationPanleLayout.setHorizontalGroup(
            ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
            .addGroup(ShowAllocationPanleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TeacherChangePasswordButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TeacherChangePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(ShowAllocationPanleLayout.createSequentialGroup()
                .addComponent(Attendance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAssignmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(Option3OptionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(Option4OptionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Option5OptionButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowTestButton))
        );
        ShowAllocationPanleLayout.setVerticalGroup(
            ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllocationPanleLayout.createSequentialGroup()
                .addGroup(ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TeacherChangePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(TeacherChangePasswordButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllocationPanleLayout.createSequentialGroup()
                        .addGroup(ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Option3OptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Option4OptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Option5OptionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ShowTestButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllocationPanleLayout.createSequentialGroup()
                        .addGroup(ShowAllocationPanleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddAssignmentButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(Attendance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))))
        );

        MiddllePanel.add(ShowAllocationPanle, "card5");

        ShowAttendence.setBackground(new java.awt.Color(255, 255, 255));

        topPanel.setBackground(new java.awt.Color(0, 102, 204));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Select date ");

        AttendenceDateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Show attendence");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Semester");

        semesterTF2.setEditable(false);

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Department");

        deptTF2.setEditable(false);

        subjectNameTF2.setEditable(false);

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Subject Name");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Subject code");

        subjectTF2.setEditable(false);

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel20)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(topPanelLayout.createSequentialGroup()
                                    .addComponent(subjectTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel19))
                                .addGroup(topPanelLayout.createSequentialGroup()
                                    .addComponent(semesterTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(topPanelLayout.createSequentialGroup()
                                .addComponent(AttendenceDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)))
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectNameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deptTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jButton2)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(semesterTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(deptTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(subjectTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(subjectNameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AttendenceDateCombo)
                    .addComponent(jButton2)
                    .addComponent(jLabel15))
                .addContainerGap())
        );

        ShowAttendenceTable.setAutoCreateRowSorter(true);
        ShowAttendenceTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ShowAttendenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Id", "Student Name", "Attendance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ShowAttendenceTable.setRowHeight(40);
        jScrollPane1.setViewportView(ShowAttendenceTable);

        reSaveAttendenceButton.setBackground(new java.awt.Color(204, 255, 204));
        reSaveAttendenceButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reSaveAttendenceButton.setText("Save changes");
        reSaveAttendenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reSaveAttendenceButtonActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton5.setText("Back");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAttendenceLayout = new javax.swing.GroupLayout(ShowAttendence);
        ShowAttendence.setLayout(ShowAttendenceLayout);
        ShowAttendenceLayout.setHorizontalGroup(
            ShowAttendenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ShowAttendenceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reSaveAttendenceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ShowAttendenceLayout.setVerticalGroup(
            ShowAttendenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAttendenceLayout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ShowAttendenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reSaveAttendenceButton, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        MiddllePanel.add(ShowAttendence, "card2");

        AddAttendencePanel.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setText("Select any date from the appropriate month to add monthly attendence");

        AllendenceStudentTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AllendenceStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student id", "Student name", "Attendence in %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AllendenceStudentTable.setRowHeight(30);
        jScrollPane5.setViewportView(AllendenceStudentTable);

        jLabel3.setText("Semester");

        semesterTF.setEditable(false);

        subjectTF.setEditable(false);

        jLabel4.setText("Subject code");

        jLabel5.setText("Subject Name");

        subjectNameTF.setEditable(false);

        jLabel6.setText("Department");

        deptTF.setEditable(false);

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddAttendencePanelLayout = new javax.swing.GroupLayout(AddAttendencePanel);
        AddAttendencePanel.setLayout(AddAttendencePanelLayout);
        AddAttendencePanelLayout.setHorizontalGroup(
            AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                        .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jXDatePickeAttendence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                                    .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGap(27, 27, 27)
                                    .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                                            .addComponent(subjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel5))
                                        .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                                            .addComponent(semesterTF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(deptTF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(subjectNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE))
                .addContainerGap())
        );
        AddAttendencePanelLayout.setVerticalGroup(
            AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAttendencePanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(semesterTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(deptTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(subjectTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(subjectNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jXDatePickeAttendence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddAttendencePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        MiddllePanel.add(AddAttendencePanel, "card7");

        AddAssignmentPanel.setBackground(new java.awt.Color(255, 204, 204));

        jLabel9.setText("Semester");

        semesterTF1.setEditable(false);

        jLabel10.setText("Department");

        deptTF1.setEditable(false);

        subjectNameTF1.setEditable(false);

        jLabel11.setText("Subject Name");

        subjectTF1.setEditable(false);

        jLabel12.setText("Subject code");

        jLabel13.setText("Select date");

        AssignmentStudentTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AssignmentStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student id", "Student name", "Assignment Mark (out of 15 )"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AssignmentStudentTable.setRowHeight(30);
        jScrollPane6.setViewportView(AssignmentStudentTable);

        SaveAssignmentButton.setBackground(new java.awt.Color(204, 255, 204));
        SaveAssignmentButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SaveAssignmentButton.setText("Save");
        SaveAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAssignmentButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Assignment name");

        jButton7.setBackground(new java.awt.Color(204, 204, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddAssignmentPanelLayout = new javax.swing.GroupLayout(AddAssignmentPanel);
        AddAssignmentPanel.setLayout(AddAssignmentPanelLayout);
        AddAssignmentPanelLayout.setHorizontalGroup(
            AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6)
            .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jXDatePickeAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AssignmentNameTF))
                    .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                        .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addGap(27, 27, 27)
                        .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                                .addComponent(subjectTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11))
                            .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                                .addComponent(semesterTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNameTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                        .addComponent(SaveAssignmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(300, Short.MAX_VALUE))
        );
        AddAssignmentPanelLayout.setVerticalGroup(
            AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAssignmentPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(semesterTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(deptTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(subjectTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(subjectNameTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jXDatePickeAssignment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(AssignmentNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddAssignmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SaveAssignmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        MiddllePanel.add(AddAssignmentPanel, "card6");

        ShowAssignmentPanel1.setBackground(new java.awt.Color(255, 255, 255));

        topPanel3.setBackground(new java.awt.Color(0, 102, 204));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Select date ");

        AssignmentDateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("show assignments");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Semester");

        semesterTF3.setEditable(false);

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Department");

        deptTF3.setEditable(false);

        subjectNameTF3.setEditable(false);

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Subject Name");

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Subject code");

        subjectTF3.setEditable(false);

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Assignment name");

        assignmentNameTF.setEditable(false);

        javax.swing.GroupLayout topPanel3Layout = new javax.swing.GroupLayout(topPanel3);
        topPanel3.setLayout(topPanel3Layout);
        topPanel3Layout.setHorizontalGroup(
            topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanel3Layout.createSequentialGroup()
                        .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel26)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(topPanel3Layout.createSequentialGroup()
                                .addComponent(subjectTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel25))
                            .addGroup(topPanel3Layout.createSequentialGroup()
                                .addComponent(semesterTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNameTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(topPanel3Layout.createSequentialGroup()
                                .addComponent(AssignmentDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3))
                            .addComponent(assignmentNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topPanel3Layout.setVerticalGroup(
            topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(semesterTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(deptTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(subjectTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(subjectNameTF3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AssignmentDateCombo)
                    .addComponent(jButton3)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignmentNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(17, 17, 17))
        );

        ShowAssignmentTable.setAutoCreateRowSorter(true);
        ShowAssignmentTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ShowAssignmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Id", "Student Name", "Assignment mark out of 15"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ShowAssignmentTable.setRowHeight(40);
        jScrollPane7.setViewportView(ShowAssignmentTable);

        reSaveAttendenceButton2.setBackground(new java.awt.Color(204, 255, 204));
        reSaveAttendenceButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reSaveAttendenceButton2.setText("Save changes");
        reSaveAttendenceButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reSaveAttendenceButton2ActionPerformed(evt);
            }
        });

        reSaveAttendenceButton3.setBackground(new java.awt.Color(204, 255, 204));
        reSaveAttendenceButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reSaveAttendenceButton3.setText("Back");
        reSaveAttendenceButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reSaveAttendenceButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAssignmentPanel1Layout = new javax.swing.GroupLayout(ShowAssignmentPanel1);
        ShowAssignmentPanel1.setLayout(ShowAssignmentPanel1Layout);
        ShowAssignmentPanel1Layout.setHorizontalGroup(
            ShowAssignmentPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane7)
            .addGroup(ShowAssignmentPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reSaveAttendenceButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reSaveAttendenceButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ShowAssignmentPanel1Layout.setVerticalGroup(
            ShowAssignmentPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAssignmentPanel1Layout.createSequentialGroup()
                .addComponent(topPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(ShowAssignmentPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reSaveAttendenceButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reSaveAttendenceButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MiddllePanel.add(ShowAssignmentPanel1, "card9");

        AddTestMarkPanel.setBackground(new java.awt.Color(255, 204, 204));
        AddTestMarkPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add class test details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel29.setText("Semester");

        semesterTF4.setEditable(false);

        jLabel30.setText("Subject code");

        subjectTF4.setEditable(false);

        jLabel31.setText("Department");

        jLabel32.setText("Subject Name");

        deptTF4.setEditable(false);

        subjectNameTF4.setEditable(false);

        testAddTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        testAddTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student id", "Student name", "Test mark ( out of 25) "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        testAddTable.setRowHeight(30);
        jScrollPane8.setViewportView(testAddTable);

        SaveAssignmentButton1.setBackground(new java.awt.Color(204, 255, 204));
        SaveAssignmentButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SaveAssignmentButton1.setText("Save");
        SaveAssignmentButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAssignmentButton1ActionPerformed(evt);
            }
        });

        jLabel34.setText("Date of test");

        SaveAssignmentButton2.setBackground(new java.awt.Color(204, 204, 255));
        SaveAssignmentButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SaveAssignmentButton2.setText("Back");
        SaveAssignmentButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAssignmentButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddTestMarkPanelLayout = new javax.swing.GroupLayout(AddTestMarkPanel);
        AddTestMarkPanel.setLayout(AddTestMarkPanelLayout);
        AddTestMarkPanelLayout.setHorizontalGroup(
            AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                        .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel34))
                                .addGap(18, 18, 18)
                                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                                        .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                                                .addComponent(subjectTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel32))
                                            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                                                .addComponent(semesterTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(deptTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(subjectNameTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jXDatePickeTest, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                                .addComponent(SaveAssignmentButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SaveAssignmentButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 287, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AddTestMarkPanelLayout.setVerticalGroup(
            AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTestMarkPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(semesterTF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(deptTF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(subjectTF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(subjectNameTF4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jXDatePickeTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddTestMarkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveAssignmentButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveAssignmentButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        MiddllePanel.add(AddTestMarkPanel, "card9");

        ShowAttendence1.setBackground(new java.awt.Color(255, 255, 255));

        topPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Select date ");

        TestDateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton4.setText("Show test mark");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Semester");

        semesterTF5.setEditable(false);

        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Department");

        deptTF5.setEditable(false);

        subjectNameTF5.setEditable(false);

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Subject Name");

        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Subject code");

        subjectTF5.setEditable(false);

        javax.swing.GroupLayout topPanel1Layout = new javax.swing.GroupLayout(topPanel1);
        topPanel1.setLayout(topPanel1Layout);
        topPanel1Layout.setHorizontalGroup(
            topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(jLabel39)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanel1Layout.createSequentialGroup()
                        .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(topPanel1Layout.createSequentialGroup()
                                    .addComponent(subjectTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel38))
                                .addGroup(topPanel1Layout.createSequentialGroup()
                                    .addComponent(semesterTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(topPanel1Layout.createSequentialGroup()
                                .addComponent(TestDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)))
                        .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deptTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectNameTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topPanel1Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jButton4)))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        topPanel1Layout.setVerticalGroup(
            topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(semesterTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(deptTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(subjectTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(subjectNameTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(topPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TestDateCombo)
                    .addComponent(jButton4)
                    .addComponent(jLabel33))
                .addContainerGap())
        );

        ShowTestTable.setAutoCreateRowSorter(true);
        ShowTestTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ShowTestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student Id", "Student Name", "Test mark (out of 25 )"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ShowTestTable.setRowHeight(40);
        jScrollPane2.setViewportView(ShowTestTable);

        reSaveAttendenceButton1.setBackground(new java.awt.Color(204, 255, 204));
        reSaveAttendenceButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reSaveAttendenceButton1.setText("Save changes");
        reSaveAttendenceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reSaveAttendenceButton1ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton8.setText("Back");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAttendence1Layout = new javax.swing.GroupLayout(ShowAttendence1);
        ShowAttendence1.setLayout(ShowAttendence1Layout);
        ShowAttendence1Layout.setHorizontalGroup(
            ShowAttendence1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(ShowAttendence1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reSaveAttendenceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ShowAttendence1Layout.setVerticalGroup(
            ShowAttendence1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAttendence1Layout.createSequentialGroup()
                .addComponent(topPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addGroup(ShowAttendence1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(reSaveAttendenceButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout ShowTestPanelLayout = new javax.swing.GroupLayout(ShowTestPanel);
        ShowTestPanel.setLayout(ShowTestPanelLayout);
        ShowTestPanelLayout.setHorizontalGroup(
            ShowTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
            .addGroup(ShowTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ShowTestPanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(ShowAttendence1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        ShowTestPanelLayout.setVerticalGroup(
            ShowTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 489, Short.MAX_VALUE)
            .addGroup(ShowTestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ShowTestPanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(ShowAttendence1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );

        MiddllePanel.add(ShowTestPanel, "card9");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ADD STUDENT", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel16.setText("Registered Id");

        jLabel22.setText("Name");

        jLabel28.setText("Personal info");

        studentInfoTA.setColumns(20);
        studentInfoTA.setRows(5);
        jScrollPane3.setViewportView(studentInfoTA);

        jLabel35.setText("Department");

        studentDeptCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addStudentButton.setBackground(new java.awt.Color(204, 255, 204));
        addStudentButton.setText("Add Student");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 204, 204));
        jButton10.setText("Close");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        studentBatchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel40.setText("Batch name");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(studentBatchCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(studentRegIdTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentNameTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                            .addComponent(studentDeptCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(292, 292, 292))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentRegIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDeptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentBatchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentButton)
                    .addComponent(jButton10))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddStudentLayout = new javax.swing.GroupLayout(AddStudent);
        AddStudent.setLayout(AddStudentLayout);
        AddStudentLayout.setHorizontalGroup(
            AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AddStudentLayout.setVerticalGroup(
            AddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MiddllePanel.add(AddStudent, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MiddllePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(HeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(MiddllePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AttendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttendanceMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(MemberRegOptionButton, null);
    }//GEN-LAST:event_AttendanceMouseClicked

    private void AddAssignmentButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddAssignmentButtonMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(MonthlyFeeOptionButton, null);
    }//GEN-LAST:event_AddAssignmentButtonMouseClicked

    private void Option3OptionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option3OptionButtonMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(AddActivityOptionButton, null);
    }//GEN-LAST:event_Option3OptionButtonMouseClicked

    private void Option4OptionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option4OptionButtonMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(DebitTransactionOptionButton, null);
    }//GEN-LAST:event_Option4OptionButtonMouseClicked

    private void Option5OptionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option5OptionButtonMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(CreditTransactionOptionButton, null);
    }//GEN-LAST:event_Option5OptionButtonMouseClicked

    private void LogoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseClicked
        // TODO add your handling code here:
        //this.ButtonSelection(LogoutButton, null);
    }//GEN-LAST:event_LogoutButtonMouseClicked

    private void AttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttendanceActionPerformed
        
        
        try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)AllendenceStudentTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
                //batchNameTF.setText(batchName);
                semesterTF.setText(String.valueOf(semester));
                subjectTF.setText(SubjectId);
                subjectNameTF.setText(SubjectIName);
                deptTF.setText(departmentName);
                
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date currentDate = new Date();
                jXDatePickeAttendence.setDate(currentDate);
                ResultSet rs = dbManager.getAllStudentsWith( semester, deptId);
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       dm.addRow(new Object[]{
                           rs.getString("Student_ID"),
                           rs.getString("Student_Name"),
                           "0"                          
                       
                       }); 
                        
                    }
                }
                
                setPanelVisibility(AddAttendencePanel);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }            
        
        
        
        
        
        
         
    }//GEN-LAST:event_AttendanceActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        new LoginForm().setVisible(true);
        this.hide();
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void Option3OptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Option3OptionButtonActionPerformed
        
       try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)testAddTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
               // batchNameTF4.setText(batchName);
                semesterTF4.setText(String.valueOf(semester));
                subjectTF4.setText(SubjectId);
                subjectNameTF4.setText(SubjectIName);
                deptTF4.setText(departmentName);
                
                ResultSet rs = dbManager.getAllStudentsWith(semester, deptId);
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       dm.addRow(new Object[]{
                           rs.getString("Student_ID"),
                           rs.getString("Student_Name"),
                           "0"                          
                       
                       }); 
                        
                    }
                }
                
                setPanelVisibility(AddTestMarkPanel);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }                 
       
        
    }//GEN-LAST:event_Option3OptionButtonActionPerformed

    private void AddAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAssignmentButtonActionPerformed
       try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)AssignmentStudentTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
                //batchNameTF1.setText(batchName);
                semesterTF1.setText(String.valueOf(semester));
                subjectTF1.setText(SubjectId);
                subjectNameTF1.setText(SubjectIName);
                deptTF1.setText(departmentName);
                
                ResultSet rs = dbManager.getAllStudentsWith(semester, deptId);
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       dm.addRow(new Object[]{
                           rs.getString("Student_ID"),
                           rs.getString("Student_Name"),
                           "0"                          
                       
                       }); 
                        
                    }
                }
                
                setPanelVisibility(AddAssignmentPanel);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }            
        
       
        //setPanelVisibility(jPanel4);            
        
       
        //setPanelVisibility(jPanel4);            
        
       
        //setPanelVisibility(jPanel4);            
        
       
        //setPanelVisibility(jPanel4);
    }//GEN-LAST:event_AddAssignmentButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(ValidateAttendenceEntry()){
                int rowCount = AllendenceStudentTable.getRowCount();
                if(rowCount > 0){

                    Date attendenceDate   = jXDatePickeAttendence.getDate();
                    String date;
                    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

                    date              = format.format(attendenceDate);
                    int subjectId     = Integer.valueOf(subjectTF.getText());
                    int studentId     = 0;
                    int attendence    = 0;
                    try {
                        DatabaseManager dbManager = new DatabaseManager();
                        for(int index = 0;index<rowCount;index++){

                            studentId   = Integer.valueOf(AllendenceStudentTable.getValueAt(index, 0).toString());
                            attendence  = Integer.valueOf(AllendenceStudentTable.getValueAt(index, 2).toString());
                            dbManager.insertAttendance(studentId, attendence, date, subjectId);
                            
                         }
                         JOptionPane.showMessageDialog(null,"Attendence added sucessfully");

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No details to save");
                }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SaveAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAssignmentButtonActionPerformed
        // TODO add your handling code here:
        if(ValidateAssignmentEntry()){
            
                int rowCount = AssignmentStudentTable.getRowCount();
                if(rowCount > 0){

                    Date assignmentDate   = jXDatePickeAssignment.getDate();
                    String date;
                    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

                    date              = format.format(assignmentDate);
                    int subjectId     = Integer.valueOf(subjectTF1.getText());
                    int studentId     = 0;
                    int assignMark    = 0;
                    String assignName = AssignmentNameTF.getText();
                    try {
                        DatabaseManager dbManager = new DatabaseManager();
                        for(int index = 0;index<rowCount;index++){

                            studentId   = Integer.valueOf(AssignmentStudentTable.getValueAt(index, 0).toString());
                            assignMark  = Integer.valueOf(AssignmentStudentTable.getValueAt(index, 2).toString());
                            dbManager.insertAssignment(studentId, assignMark, date, subjectId,assignName);
                            
                         }
                        JOptionPane.showMessageDialog(null,"Assignment added sucessfully");


                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No details to save");
                }
        }
        
    }//GEN-LAST:event_SaveAssignmentButtonActionPerformed

    private void Option4OptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Option4OptionButtonActionPerformed
        // TODO add your handling code here:
         try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)ShowAttendenceTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
                //batchNameTF2.setText(batchName);
                semesterTF2.setText(String.valueOf(semester));
                subjectTF2.setText(SubjectId);
                subjectNameTF2.setText(SubjectIName);
                deptTF2.setText(departmentName);
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date currentDate = new Date();
                               
                ResultSet rs = dbManager.getAllAttendenceDate(SubjectId);
                AttendenceDateCombo.removeAllItems();
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       
                       AttendenceDateCombo.addItem(rs.getString(1));
                    }
                }
                
                setPanelVisibility(ShowAttendence);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }            
        
        
    }//GEN-LAST:event_Option4OptionButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            
        String selectedDate = AttendenceDateCombo.getSelectedItem().toString();
        String subjectId    = subjectTF2.getText();
        
        DatabaseManager dbManager = new DatabaseManager();
        ResultSet rs              = dbManager.getAllAttendanceData(subjectId, selectedDate);
        DefaultTableModel dm      = (DefaultTableModel)ShowAttendenceTable.getModel();
        dm.setRowCount(0);
        if(rs.isBeforeFirst()){
            
            while(rs.next()){
                
              dm.addRow(new Object[]{
                  rs.getString("Student_ID"),
                  rs.getString("Student_Name"),
                  rs.getString("Attendance_Percentage")
              
              });
              
            }
          }
        }
        catch(ClassNotFoundException | SQLException e){
            
          Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e);   
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Option5OptionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Option5OptionButtonActionPerformed
        // TODO add your handling code here:
        try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)ShowAssignmentTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
                //batchNameTF3.setText(batchName);
                semesterTF3.setText(String.valueOf(semester));
                subjectTF3.setText(SubjectId);
                subjectNameTF3.setText(SubjectIName);
                deptTF3.setText(departmentName);
                
                ResultSet rs = dbManager.getAllAssignmentDate(SubjectId);
                AssignmentDateCombo.removeAllItems();
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       
                       AssignmentDateCombo.addItem(rs.getString(1));
                    }
                }
                
                setPanelVisibility(ShowAssignmentPanel1);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }            
        
    }//GEN-LAST:event_Option5OptionButtonActionPerformed

    private void SaveAssignmentButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAssignmentButton1ActionPerformed
        // TODO add your handling code here:
        if(ValidateTestEntry()){
            
                int rowCount = testAddTable.getRowCount();
                if(rowCount > 0){

                    Date assignmentDate   = jXDatePickeTest.getDate();
                    String date;
                    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");

                    date              = format.format(assignmentDate);
                    int subjectId     = Integer.valueOf(subjectTF4.getText());
                    int studentId     = 0;
                    int testMark    = 0;
                    
                    try {
                        DatabaseManager dbManager = new DatabaseManager();
                        for(int index = 0;index<rowCount;index++){

                            studentId   = Integer.valueOf(testAddTable.getValueAt(index, 0).toString());
                            testMark  = Integer.valueOf(testAddTable.getValueAt(index, 2).toString());
                            dbManager.insertTest(studentId, testMark, date, subjectId);
                            
                         }
                        JOptionPane.showMessageDialog(null,"Test details added sucessfully");


                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No details to save");
                }
        }
        
        
    }//GEN-LAST:event_SaveAssignmentButton1ActionPerformed

    private void ShowTestButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowTestButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ShowTestButtonMouseClicked

    private void ShowTestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTestButtonActionPerformed
        // TODO add your handling code here:
        try{
            
            DatabaseManager dbManager = new DatabaseManager();
            DefaultTableModel dm = (DefaultTableModel)ShowTestTable.getModel();
            dm.setRowCount(0);
            int row = AllocationDetailsTable.getSelectedRow();
            System.out.print(row);
            if(row >= 0){
                
                String departmentName = AllocationDetailsTable.getValueAt(row,3).toString();
                //String batchName      = AllocationDetailsTable.getValueAt(row, 5).toString();
                String SubjectId      = AllocationDetailsTable.getValueAt(row, 1).toString();
                String SubjectIName   = AllocationDetailsTable.getValueAt(row, 2).toString();
                int  semester = Integer.valueOf(AllocationDetailsTable.getValueAt(row,4).toString());
                
                int  deptId   = dbManager.getDepartmentIdWithName(departmentName);
                //int  batchId  = dbManager.getBatchIdFromBatchName(batchName);
                
                //batchNameTF5.setText(batchName);
                semesterTF5.setText(String.valueOf(semester));
                subjectTF5.setText(SubjectId);
                subjectNameTF5.setText(SubjectIName);
                deptTF5.setText(departmentName);
                
                ResultSet rs = dbManager.getAllTestDate(SubjectId);
                TestDateCombo.removeAllItems();
                if(rs.isBeforeFirst()){
                    
                    while(rs.next()){
                       
                       TestDateCombo.addItem(rs.getString(1));
                    }
                }
                
                setPanelVisibility(ShowTestPanel);
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a subject to continue");
            }
        }
        catch(NumberFormatException | SQLException | HeadlessException | ClassNotFoundException e){
            
           Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
        }       
        
    }//GEN-LAST:event_ShowTestButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try{
            String selectedDate = AssignmentDateCombo.getSelectedItem().toString();
            String subjectId    = subjectTF3.getText();

            DatabaseManager dbManager = new DatabaseManager();
            ResultSet rs              = dbManager.getAllAssignmentData(subjectId, selectedDate);
            DefaultTableModel dm      = (DefaultTableModel)ShowAssignmentTable.getModel();
            dm.setRowCount(0);
            if(rs.isBeforeFirst()){

                while(rs.next()){

                    dm.addRow(new Object[]{
                        rs.getString("Student_ID"),
                        rs.getString("Student_Name"),
                        rs.getString("Assignment_Mark")

                    });
                    assignmentNameTF.setText(rs.getString("Assignment_Name"));
                }
            }
        }
        catch(ClassNotFoundException | SQLException e){

            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
            String selectedDate = TestDateCombo.getSelectedItem().toString();
            String subjectId    = subjectTF5.getText();

            DatabaseManager dbManager = new DatabaseManager();
            ResultSet rs              = dbManager.getAllTestData(subjectId, selectedDate);
            DefaultTableModel dm      = (DefaultTableModel)ShowTestTable.getModel();
            dm.setRowCount(0);
            if(rs.isBeforeFirst()){

                while(rs.next()){

                    dm.addRow(new Object[]{
                        rs.getString("Student_ID"),
                        rs.getString("Student_Name"),
                        rs.getString("Test_Mark")

                    });
                  
                }
            }
        }
        catch(ClassNotFoundException | SQLException e){

            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void TeacherChangePasswordButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TeacherChangePasswordButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TeacherChangePasswordButtonMouseClicked

    private void TeacherChangePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeacherChangePasswordButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            DatabaseManager manager = new DatabaseManager();
            int regID = manager. getTeacherRegIdFromTeacherID(this.teacherId);
            if( regID != 0)
            {
                String username = "t"+regID;
                ChangePasswordForm cpwd = new ChangePasswordForm(username);
                cpwd.setVisible(true);
            }
        }
        catch(ClassNotFoundException | SQLException e)
        {

            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e);
        }        
    }//GEN-LAST:event_TeacherChangePasswordButtonActionPerformed

    private void reSaveAttendenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reSaveAttendenceButtonActionPerformed
        // TODO add your handling code here:
    if(updateAttendenceEntry())
    {
        int rowCount = ShowAttendenceTable.getRowCount();
        if(rowCount > 0){

            String date       = AttendenceDateCombo.getSelectedItem().toString();
            int subjectId     = Integer.valueOf(subjectTF2.getText());
            int studentId     = 0;
            int attendence    = 0;
            try {
                DatabaseManager dbManager = new DatabaseManager();
                for(int index = 0;index<rowCount;index++){

                    studentId   = Integer.valueOf(ShowAttendenceTable.getValueAt(index, 0).toString());
                    attendence  = Integer.valueOf(ShowAttendenceTable.getValueAt(index, 2).toString());
                    dbManager.updateAttendance(studentId, attendence, date, subjectId);

                }
                JOptionPane.showMessageDialog(null,"Attendence updated sucessfully");

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"No details to save");
        }
    }

    }//GEN-LAST:event_reSaveAttendenceButtonActionPerformed

    private void reSaveAttendenceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reSaveAttendenceButton1ActionPerformed
        // TODO add your handling code here:
        if(ValidateTestUpdate()){
            int rowCount = ShowTestTable.getRowCount();
                if(rowCount > 0){
                    
                    String date       = TestDateCombo.getSelectedItem().toString();
                    int subjectId     = Integer.valueOf(subjectTF5.getText());
                    int studentId     = 0;
                    int testMark      = 0;
                    try {
                        DatabaseManager dbManager = new DatabaseManager();
                        for(int index = 0;index<rowCount;index++){

                            studentId   = Integer.valueOf(ShowTestTable.getValueAt(index, 0).toString());
                            testMark  = Integer.valueOf(ShowTestTable.getValueAt(index, 2).toString());
                            dbManager.updateTest(studentId, testMark, date, subjectId);
                            
                         }
                         JOptionPane.showMessageDialog(null,"Test mark updated sucessfully");

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No details to save");
                }
        }
        
    }//GEN-LAST:event_reSaveAttendenceButton1ActionPerformed

    private void reSaveAttendenceButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reSaveAttendenceButton2ActionPerformed
        // TODO add your handling code here:
        if(ValidateAssignmentUpdate()){
            int rowCount = ShowAssignmentTable.getRowCount();
                if(rowCount > 0){
                    
                    String date       = AssignmentDateCombo.getSelectedItem().toString();
                    int subjectId     = Integer.valueOf(subjectTF3.getText());
                    String assignName = assignmentNameTF.getText();
                    int studentId     = 0;
                    int assignmentMark = 0;
                    try {
                        DatabaseManager dbManager = new DatabaseManager();
                        for(int index = 0;index<rowCount;index++){

                            studentId   = Integer.valueOf(ShowAssignmentTable.getValueAt(index, 0).toString());
                            assignmentMark  = Integer.valueOf(ShowAssignmentTable.getValueAt(index, 2).toString());
                            dbManager.updateAssignment(studentId, assignmentMark, date, subjectId,assignName);
                            
                         }
                         JOptionPane.showMessageDialog(null,"Assignment mark updated sucessfully");

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"No details to save");
                }
        }
    }//GEN-LAST:event_reSaveAttendenceButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void reSaveAttendenceButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reSaveAttendenceButton3ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_reSaveAttendenceButton3ActionPerformed

    private void SaveAssignmentButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAssignmentButton2ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_SaveAssignmentButton2ActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:

            DatabaseManager dbManager = new DatabaseManager();
            String studentRegId     = studentRegIdTF.getText();
            String studentName      = studentNameTF.getText();
            String studentInfo      = studentInfoTA.getText();
            String studentDeptName  = studentDeptCombo.getSelectedItem().toString();
            String studentBatchName = studentBatchCombo.getSelectedItem().toString();

            if( !studentRegId.equals("") && !studentName.equals("") && !studentInfo.equals("") && !studentDeptName.equals("") && !studentBatchName.equals("")){

                int studentDeptId    =  dbManager.getDepartmentIdWithName(studentDeptName);
                int studentBatchId   =  dbManager.getBatchIdFromBatchName(studentBatchName);
                if(studentDeptId > 0 && studentBatchId > 0){

                    if( dbManager.addStudentWith(studentRegId,studentName,studentInfo,studentDeptId,studentBatchId) ){

                        JOptionPane.showMessageDialog(rootPane, "New student added sucessfully");
                        JOptionPane.showMessageDialog(rootPane, "The auto generated id for the student is : "+new DatabaseManager().getStudentIdFromRegId(studentRegId) );
                        

                    }
                    else{
                        JOptionPane.showMessageDialog(rootPane, "failed to add new student");
                    }

                }

            }
        }
        catch(ClassNotFoundException | SQLException e){
            Logger.getLogger(PrincipalHome.class.getName()).log(Level.SEVERE, null, e);
        }

    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void TeacherChangePasswordButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TeacherChangePasswordButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TeacherChangePasswordButton1MouseClicked

    private void TeacherChangePasswordButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TeacherChangePasswordButton1ActionPerformed
        // TODO add your handling code here:
         ResultSet result;
        studentDeptCombo.removeAllItems();
        studentBatchCombo.removeAllItems();
        try {
            DatabaseManager dbManager = new DatabaseManager();
            
            // show department
            String dept = dbManager.SelectDepartmentName(this.deptId);  
            studentDeptCombo.addItem(dept);            
            
            // show all batches
            result = dbManager.SelectBatchName(this.deptId);            
            if ( result.isBeforeFirst() ) {    
              
                while(result.next()){
                
                    studentBatchCombo.addItem(result.getString("Batch_Name"));                
                }              
            }
            
            //setPanelVisibility(AddHodPanel); 
           
        }
        catch(ClassNotFoundException | SQLException e){
            
        }
        
        
        setPanelVisibility(AddStudent);
        
    }//GEN-LAST:event_TeacherChangePasswordButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        setPanelVisibility(ShowAllocationPanle);
    }//GEN-LAST:event_jButton10ActionPerformed

    private boolean ValidateAttendenceEntry(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
        Date attendenceDate   = jXDatePickeAttendence.getDate();
        ResultSet dateSet = dbManager.getEntryDates();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        if(dateSet.isBeforeFirst())
        {
            dateSet.next();
            Date startOn = format.parse(dateSet.getString("starts_on"));
            Date endsOn  = format.parse(dateSet.getString("ends_on"));
            
            if( (attendenceDate.compareTo(startOn)) >= 0 &&  (attendenceDate.compareTo(endsOn) <= 0 ) )
            {
                
            }
            else
            {
               JOptionPane.showMessageDialog(rootPane,"Attendence entry date expired please contact hod"); 
                bStatus = false;
            }
                    
        }
        if(null == attendenceDate){
          bStatus = false;  
          JOptionPane.showMessageDialog(rootPane,"please select date");
        }
        
       int rowCount = AllendenceStudentTable.getRowCount();
       if(rowCount > 0){ 
            int studentId     = 0;
            int attendence    = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId   = Integer.valueOf(AllendenceStudentTable.getValueAt(index, 0).toString());
                 attendence  = Integer.valueOf(AllendenceStudentTable.getValueAt(index, 2).toString());
                 if(attendence > 100 || attendence < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Attendence of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 }               
                 
            }
            
            if(dbManager.isDateExist(attendenceDate,subjectId)){
                JOptionPane.showMessageDialog(rootPane,"Attendence of selected month exist");
                bStatus = false;
            }
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      } catch (ParseException ex) {
            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       return bStatus;
    }
    
    
    private boolean ValidateAssignmentEntry(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF1.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
        Date assignmentDate   = jXDatePickeAssignment.getDate();
        if(null == assignmentDate){
          bStatus = false;  
          JOptionPane.showMessageDialog(rootPane,"please select date");
        }
        
        if(AssignmentNameTF.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane,"please enter assignment name");
            bStatus = false;
        }
        
       int rowCount = AssignmentStudentTable.getRowCount();
       if(rowCount > 0){ 
            int studentId       = 0;
            int assignmentMark  = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId       = Integer.valueOf(AssignmentStudentTable.getValueAt(index, 0).toString());
                 assignmentMark  = Integer.valueOf(AssignmentStudentTable.getValueAt(index, 2).toString());
                 if(assignmentMark > 15 || assignmentMark < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Assignment mark of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 }               
                 
            }
            
           
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      }
       
       return bStatus;
    }
    
    private boolean ValidateTestUpdate(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF5.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
        
        
        
        
       int rowCount = ShowTestTable.getRowCount();
       if(rowCount > 0){ 
            int studentId       = 0;
            int testMark  = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId       = Integer.valueOf(ShowTestTable.getValueAt(index, 0).toString());
                 testMark  = Integer.valueOf(ShowTestTable.getValueAt(index, 2).toString());
                 if(testMark > 25 || testMark < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Test mark of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 } 
                 
                 System.out.print("hai");
                 
            }
            
           
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      }
        System.out.print("sdada");
       return bStatus;
    }
    
    private boolean ValidateAssignmentUpdate(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF3.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
       int rowCount = ShowAssignmentTable.getRowCount();
       if(rowCount > 0){ 
            int studentId       = 0;
            int assignmentMark  = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId       = Integer.valueOf(ShowAssignmentTable.getValueAt(index, 0).toString());
                 assignmentMark  = Integer.valueOf(ShowAssignmentTable.getValueAt(index, 2).toString());
                 if(assignmentMark > 15 || assignmentMark < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Assignment mark of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 }               
                 
            }
            
           
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      }
       
       return bStatus;
    }
    
    private boolean ValidateTestEntry(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF4.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
        Date assignmentDate   = jXDatePickeTest.getDate();
        if(null == assignmentDate){
          bStatus = false;  
          JOptionPane.showMessageDialog(rootPane,"please select date");
        }
        
        
        
       int rowCount = testAddTable.getRowCount();
       if(rowCount > 0){ 
            int studentId       = 0;
            int testMark  = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId       = Integer.valueOf(testAddTable.getValueAt(index, 0).toString());
                 testMark  = Integer.valueOf(testAddTable.getValueAt(index, 2).toString());
                 if(testMark > 25 || testMark < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Test mark of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 } 
                 
                 System.out.print("hai");
                 
            }
            
           
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      }
        System.out.print("sdada");
       return bStatus;
    }
    
     private boolean updateAttendenceEntry(){
      boolean bStatus = true;
      int subjectId   = Integer.valueOf(subjectTF2.getText());
      try
      {  
        DatabaseManager dbManager = new DatabaseManager();
        
        ResultSet dateSet = dbManager.getEntryDates();
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date attendenceDate   = format.parse( AttendenceDateCombo.getSelectedItem().toString() );
        if(dateSet.isBeforeFirst())
        {
            dateSet.next();
            Date startOn = format.parse(dateSet.getString("starts_on"));
            Date endsOn  = format.parse(dateSet.getString("ends_on"));
            Date current = new Date();
            String strDate = format.format(current);
            current = format.parse(strDate);
            
            System.out.println(current);
            if( (current.compareTo(startOn)) >= 0 &&  (current.compareTo(endsOn) <= 0 ) )
            {
                
            }
            else
            {
               JOptionPane.showMessageDialog(rootPane,"Attendence entry date expired please contact hod"); 
               bStatus = false;
            }
                    
        }
        
        
       int rowCount = ShowAttendenceTable.getRowCount();
       if(rowCount > 0){ 
            int studentId     = 0;
            int attendence    = 0;
            for(int index = 0;index<rowCount;index++){

                 studentId   = Integer.valueOf(ShowAttendenceTable.getValueAt(index, 0).toString());
                 attendence  = Integer.valueOf(ShowAttendenceTable.getValueAt(index, 2).toString());
                 if(attendence > 100 || attendence < 0 ){
                     JOptionPane.showMessageDialog(rootPane,"Attendence of student id "+studentId+" is not valid");
                
                     bStatus = false;
                     break;
                 }               
                 
            }
            
            
            
            
       }else
       {
           bStatus = false;
       }
       
      }catch(HeadlessException | NumberFormatException | ClassNotFoundException | SQLException e){
          
         Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, e); 
      } catch (ParseException ex) {
            Logger.getLogger(TeacherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       return bStatus;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       new TeacherForm().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAssignmentButton;
    private javax.swing.JPanel AddAssignmentPanel;
    private javax.swing.JPanel AddAttendencePanel;
    private javax.swing.JPanel AddStudent;
    private javax.swing.JPanel AddTestMarkPanel;
    private javax.swing.JTable AllendenceStudentTable;
    private javax.swing.JTable AllocationDetailsTable;
    private javax.swing.JComboBox AssignmentDateCombo;
    private javax.swing.JTextField AssignmentNameTF;
    private javax.swing.JTable AssignmentStudentTable;
    private javax.swing.JButton Attendance;
    private javax.swing.JComboBox AttendenceDateCombo;
    private javax.swing.JLabel HeaderLogoLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JLabel InfoLabelHeader2;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JPanel MiddllePanel;
    private javax.swing.JButton Option3OptionButton;
    private javax.swing.JButton Option4OptionButton;
    private javax.swing.JButton Option5OptionButton;
    private javax.swing.JButton SaveAssignmentButton;
    private javax.swing.JButton SaveAssignmentButton1;
    private javax.swing.JButton SaveAssignmentButton2;
    private javax.swing.JPanel ShowAllocationPanle;
    private javax.swing.JPanel ShowAssignmentPanel1;
    private javax.swing.JTable ShowAssignmentTable;
    private javax.swing.JPanel ShowAttendence;
    private javax.swing.JPanel ShowAttendence1;
    private javax.swing.JTable ShowAttendenceTable;
    private javax.swing.JButton ShowTestButton;
    private javax.swing.JPanel ShowTestPanel;
    private javax.swing.JTable ShowTestTable;
    private javax.swing.JButton TeacherChangePasswordButton;
    private javax.swing.JButton TeacherChangePasswordButton1;
    private javax.swing.JComboBox TestDateCombo;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JTextField assignmentNameTF;
    private javax.swing.JTextField deptTF;
    private javax.swing.JTextField deptTF1;
    private javax.swing.JTextField deptTF2;
    private javax.swing.JTextField deptTF3;
    private javax.swing.JTextField deptTF4;
    private javax.swing.JTextField deptTF5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private org.jdesktop.swingx.JXDatePicker jXDatePickeAssignment;
    private org.jdesktop.swingx.JXDatePicker jXDatePickeAttendence;
    private org.jdesktop.swingx.JXDatePicker jXDatePickeTest;
    private javax.swing.JButton reSaveAttendenceButton;
    private javax.swing.JButton reSaveAttendenceButton1;
    private javax.swing.JButton reSaveAttendenceButton2;
    private javax.swing.JButton reSaveAttendenceButton3;
    private javax.swing.JTextField semesterTF;
    private javax.swing.JTextField semesterTF1;
    private javax.swing.JTextField semesterTF2;
    private javax.swing.JTextField semesterTF3;
    private javax.swing.JTextField semesterTF4;
    private javax.swing.JTextField semesterTF5;
    private javax.swing.JComboBox studentBatchCombo;
    private javax.swing.JComboBox studentDeptCombo;
    private javax.swing.JTextArea studentInfoTA;
    private javax.swing.JTextField studentNameTF;
    private javax.swing.JTextField studentRegIdTF;
    private javax.swing.JTextField subjectNameTF;
    private javax.swing.JTextField subjectNameTF1;
    private javax.swing.JTextField subjectNameTF2;
    private javax.swing.JTextField subjectNameTF3;
    private javax.swing.JTextField subjectNameTF4;
    private javax.swing.JTextField subjectNameTF5;
    private javax.swing.JTextField subjectTF;
    private javax.swing.JTextField subjectTF1;
    private javax.swing.JTextField subjectTF2;
    private javax.swing.JTextField subjectTF3;
    private javax.swing.JTextField subjectTF4;
    private javax.swing.JTextField subjectTF5;
    private javax.swing.JTable testAddTable;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel topPanel1;
    private javax.swing.JPanel topPanel3;
    // End of variables declaration//GEN-END:variables
}
